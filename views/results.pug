extends layout.pug

block scripts
	script.
		var scoresCount = "#{scores}";
	script.
		$(function () {
			$('.edit-visit').click(function () {
				var visitNumber = $(this).data('visit');

				var firstDartField = $('#first-dart-visit-' + visitNumber);
				var secondDartField = $('#second-dart-visit-' + visitNumber);
				var thirdDartField = $('#third-dart-visit-' + visitNumber);

				var firstDartMultiplierField = $('#first-dart-multiplier-visit-' + visitNumber);
				var secondDartMultiplierField = $('#second-dart-multiplier-visit-' + visitNumber);
				var thirdDartMultiplierField = $('#third-dart-multiplier-visit-' + visitNumber);

				var firstDartValue = firstDartField.data('score');
				var secondDartValue = secondDartField.data('score');
				var thirdDartValue = thirdDartField.data('score');

				var firstDartMultiplierValue = firstDartMultiplierField.data('multiplier');
				var secondDartMultiplierValue = secondDartMultiplierField.data('multiplier');
				var thirdDartMultiplierValue = thirdDartMultiplierField.data('multiplier');

				if ($(this).data('issave') == 1) {
					var firstScoreChanged = firstDartField.children('input').val();
					var secondScoreChanged = secondDartField.children('input').val();
					var thirdScoreChanged = thirdDartField.children('input').val();

					// Handle miss (set multiplier to 1 automatically)
					if (firstScoreChanged == 0) {
						firstDartMultiplierField.children('input').val('1');
					}
					if (secondScoreChanged == 0) {
						secondDartMultiplierField.children('input').val('1');
					}
					if (thirdScoreChanged == 0) {
						thirdDartMultiplierField.children('input').val('1');
					}

					var firstMultiplierChanged = firstDartMultiplierField.children('input').val();
					var secondMultiplierChanged = secondDartMultiplierField.children('input').val();
					var thirdMultiplierChanged = thirdDartMultiplierField.children('input').val();

					if (isNaN(firstScoreChanged) || isNaN(firstMultiplierChanged) ||
						isNaN(secondScoreChanged) || isNaN(secondMultiplierChanged) ||
						isNaN(thirdScoreChanged) || isNaN(thirdMultiplierChanged)) {
						alert('Please enter numeric value.');
						return;
					}

					if (firstScoreChanged < 0 || firstScoreChanged > 20 || firstMultiplierChanged < 1 || firstMultiplierChanged > 3) {
						alert('Incorrect values for first dart.');
						return;
					}

					if (secondScoreChanged < 0 || secondScoreChanged > 20 || secondMultiplierChanged < 1 || secondMultiplierChanged > 3) {
						alert('Incorrect values for second dart.');
						return;
					}

					if (thirdScoreChanged < 0 || thirdScoreChanged > 20 || thirdMultiplierChanged < 1 || thirdMultiplierChanged > 3) {
						alert('Incorrect values for third dart.');
						return;
					}

					// We have correct values, let's change the summary and ppd displayed
					var total = firstScoreChanged * firstMultiplierChanged +
							secondScoreChanged * secondMultiplierChanged +
							thirdScoreChanged * thirdMultiplierChanged;
					$('.total-visit-score-' + visitNumber).text(total);

					var ppd = (total / 3).toFixed(2);
					$('.visit-ppd-' + visitNumber).text(ppd);

					$('.first-dart-visit-total-' + visitNumber).text(firstScoreChanged * firstMultiplierChanged);
					$('.second-dart-visit-total-' + visitNumber).text(secondScoreChanged * secondMultiplierChanged);
					$('.third-dart-visit-total-' + visitNumber).text(thirdScoreChanged * thirdMultiplierChanged);

					firstDartField.data('score', firstScoreChanged);
					secondDartField.data('score', secondScoreChanged);
					thirdDartField.data('score', thirdScoreChanged);

					firstDartMultiplierField.data('multiplier', firstMultiplierChanged);
					secondDartMultiplierField.data('multiplier', secondMultiplierChanged);
					thirdDartMultiplierField.data('multiplier', thirdMultiplierChanged);

					// Save the data
					var data = JSON.stringify({
						'scoreId': visitNumber,
						'firstDart': firstScoreChanged,
						'secondDart': secondScoreChanged,
						'thirdDart': thirdScoreChanged,
						'firstDartMultiplier': firstMultiplierChanged,
						'secondDartMultiplier': secondMultiplierChanged,
						'thirdDartMultiplier': thirdMultiplierChanged,
					});

					$(this).children('span').removeClass('glyphicon-floppy-disk').addClass('glyphicon-edit');
					$(this).data('issave', 0);

					/// Depending on the data-finished attribute of submit button, use different route and redirect
					var route = window.location.pathname;
					var routeRedirect = window.location.pathname;

					executePost(route, data, 'application/json',
						function (response) {
							if (response.statusCode == 200) {
								firstDartField.text(firstScoreChanged);
								secondDartField.text(secondScoreChanged);
								thirdDartField.text(thirdScoreChanged);
								firstDartMultiplierField.text(firstMultiplierChanged);
								secondDartMultiplierField.text(secondMultiplierChanged);
								thirdDartMultiplierField.text(thirdMultiplierChanged);
							} else {
								alert('Error changing score.');
							}
						},
						function (error) {
							// TODO Error handling
							console.log("Unable to proceed: " + error.responseText);
						}
					);
				} else {
					firstDartField.text('').append('<input type="text" value="' + firstDartValue + '" class="form-control" style="max-width: 50px;" />');
					secondDartField.text('').append('<input type="text" value="' + secondDartValue + '" class="form-control" style="max-width: 50px;" />');
					thirdDartField.text('').append('<input type="text" value="' + thirdDartValue + '" class="form-control" style="max-width: 50px;" />');

					firstDartMultiplierField.text('').append('<input type="text" value="' + firstDartMultiplierValue + '" class="form-control" style="max-width: 50px;" />');
					secondDartMultiplierField.text('').append('<input type="text" value="' + secondDartMultiplierValue + '" class="form-control" style="max-width: 50px;" />');
					thirdDartMultiplierField.text('').append('<input type="text" value="' + thirdDartMultiplierValue + '" class="form-control" style="max-width: 50px;" />');

					$(this).children('span').removeClass('glyphicon-edit').addClass('glyphicon-floppy-disk');
					$(this).data('issave', 1);
				}
			});

			$('#continue-match').click(function () {
				location.href = '/match/' + $(this).data('match');
			});
		});
	script.
		var dataImageMap = {};

		// Miss
		dataImageMap['p.0.1'] = {'x': 50, 'y': 50};

		dataImageMap['p.1.1'] = {'x': 348, 'y': 158};
		dataImageMap['p.1.2'] = {'x': 361, 'y': 120};
		dataImageMap['p.1.3'] = {'x': 370, 'y': 210};

		dataImageMap['p.2.1'] = {'x': 396, 'y': 442};
		dataImageMap['p.2.2'] = {'x': 418, 'y': 474};
		dataImageMap['p.2.3'] = {'x': 372, 'y': 409};

		dataImageMap['p.3.1'] = {'x': 298, 'y': 472};
		dataImageMap['p.3.2'] = {'x': 299, 'y': 513};
		dataImageMap['p.3.3'] = {'x': 299, 'y': 433};

		dataImageMap['p.4.1'] = {'x': 431, 'y': 214};
		dataImageMap['p.4.2'] = {'x': 462, 'y': 194};
		dataImageMap['p.4.3'] = {'x': 399, 'y': 239};

		dataImageMap['p.5.1'] = {'x': 250, 'y': 159};
		dataImageMap['p.5.2'] = {'x': 235, 'y': 122};
		dataImageMap['p.5.3'] = {'x': 260, 'y': 194};

		dataImageMap['p.6.1'] = {'x': 461, 'y': 310};
		dataImageMap['p.6.2'] = {'x': 500, 'y': 309};
		dataImageMap['p.6.3'] = {'x': 422, 'y': 310};

		dataImageMap['p.7.1'] = {'x': 203, 'y': 441};
		dataImageMap['p.7.2'] = {'x': 178, 'y': 472};
		dataImageMap['p.7.3'] = {'x': 226, 'y': 409};

		dataImageMap['p.8.1'] = {'x': 143, 'y': 361};
		dataImageMap['p.8.2'] = {'x': 107, 'y': 371};
		dataImageMap['p.8.3'] = {'x': 181, 'y': 348};

		dataImageMap['p.9.1'] = {'x': 166, 'y': 216};
		dataImageMap['p.9.2'] = {'x': 135, 'y': 195};
		dataImageMap['p.9.3'] = {'x': 199, 'y': 238};

		dataImageMap['p.10.1'] = {'x': 452, 'y': 359};
		dataImageMap['p.10.2'] = {'x': 492, 'y': 372};
		dataImageMap['p.10.3'] = {'x': 417, 'y': 349};

		dataImageMap['p.11.1'] = {'x': 135, 'y': 312};
		dataImageMap['p.11.2'] = {'x': 97, 'y': 310};
		dataImageMap['p.11.3'] = {'x': 176, 'y': 310};

		dataImageMap['p.12.1'] = {'x': 202, 'y': 178};
		dataImageMap['p.12.2'] = {'x': 182, 'y': 150};
		dataImageMap['p.12.3'] = {'x': 226, 'y': 212};

		dataImageMap['p.13.1'] = {'x': 451, 'y': 261};
		dataImageMap['p.13.2'] = {'x': 488, 'y': 247};
		dataImageMap['p.13.3'] = {'x': 415, 'y': 272};

		dataImageMap['p.14.1'] = {'x': 144, 'y': 260};
		dataImageMap['p.14.2'] = {'x': 108, 'y': 250};
		dataImageMap['p.14.3'] = {'x': 182, 'y': 273};

		dataImageMap['p.15.1'] = {'x': 431, 'y': 407};
		dataImageMap['p.15.2'] = {'x': 462, 'y': 429};
		dataImageMap['p.15.3'] = {'x': 399, 'y': 383};

		dataImageMap['p.16.1'] = {'x': 167, 'y': 406};
		dataImageMap['p.16.2'] = {'x': 136, 'y': 431};
		dataImageMap['p.16.3'] = {'x': 199, 'y': 384};

		dataImageMap['p.17.1'] = {'x': 348, 'y': 465};
		dataImageMap['p.17.2'] = {'x': 361, 'y': 502};
		dataImageMap['p.17.3'] = {'x': 336, 'y': 427};

		dataImageMap['p.18.1'] = {'x': 394, 'y': 180};
		dataImageMap['p.18.2'] = {'x': 416, 'y': 148};
		dataImageMap['p.18.3'] = {'x': 371, 'y': 211};

		dataImageMap['p.19.1'] = {'x': 248, 'y': 465};
		dataImageMap['p.19.2'] = {'x': 236, 'y': 503};
		dataImageMap['p.19.3'] = {'x': 261, 'y': 428};

		dataImageMap['p.20.1'] = {'x': 300, 'y': 150};
		dataImageMap['p.20.2'] = {'x': 300, 'y': 110};
		dataImageMap['p.20.3'] = {'x': 300, 'y': 180};

		dataImageMap['p.25.1'] = {'x': 300, 'y': 310};
		dataImageMap['p.25.2'] = {'x': 300, 'y': 310};

		window.onload = function(){
			function paintAtCoord(x, y, spread, size, intensity) {
				var i = 0;
				while (i < 70) {
					var xoff = Math.random() * 2 - 1;
					var yoff = Math.random() * 2 - 1;
					var l = xoff * xoff + yoff * yoff;
					if (l > 1) {
						continue;
					}
					var ls = Math.sqrt(l);
					xoff /= ls;
					yoff /= ls;
					xoff *= 1 - l;
					yoff *= 1 - l;
					i += 1;
					heatmap.addPoint(x + xoff * spread, y + yoff * spread, size, intensity / 1000);
				}
			};

			var canvas = document.getElementsByTagName('canvas')[0];
			var heatmap = createWebGLHeatmap({canvas: canvas, intensityToAlpha: true});
			//var heatmap = createWebGLHeatmap({canvas: canvas, intensityToAlpha:true, alphaRange: [1, 0]}); // inverse transparency
			//var heatmap = createWebGLHeatmap({canvas: canvas, intensityToAlpha:true, alphaRange: [0, 0.05]}); // steep transparency
			//var heatmap = createWebGLHeatmap({canvas: canvas, intensityToAlpha:true, gradientTexture:'deep-sea-gradient.png'});
			//var heatmap = createWebGLHeatmap({canvas: canvas, intensityToAlpha:false, gradientTexture:'skyline-gradient.png'});
			//var heatmap = createWebGLHeatmap({width: 500, height: 500}); // statically sized heatmap

			//document.body.appendChild(heatmap.canvas);
			var scoresCount = !{JSON.stringify(scoresCount)};
			for (var index in scoresCount) {
				var value = scoresCount[index];
				var coordinatesX = dataImageMap[index]['x'];
				var coordinatesY = dataImageMap[index]['y'];
				for (var i=0; i<value; i++) {
					paintAtCoord(coordinatesX, coordinatesY, 20, 20, 50);
				}
			}

			var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame ||
				window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;

			var update = function(){
				heatmap.adjustSize(); // can be commented out for statically sized heatmaps, resize clears the map
				heatmap.update(); // adds the buffered points
				heatmap.display(); // adds the buffered points
				raf(update);
			}

			raf(update);
		}

block content
	h2 Results

	p.
		ID: #{match.id} <br>
		Started: #{match.created_at} <br>
		Finished: #{match.end_time === undefined ? '' : match.end_time} <br>
		Duration: #{((Date.parse(match.end_time)/1000 - Date.parse(match.created_at)/1000) / (60)).toFixed()} minutes <br>
		Stakes: #{match.stake === undefined ? "None" : match.stake}

	if match.winner_id !== null
		table(id='match_result_table' class='table table-striped table-bordered')
			thead
				tr
					th Player
					th Darts Thrown
					th First 9 PPD
					th PPD
					th Scores
					th Winner
			tbody
				each player in players
					- var statistics = player.statistics;
					tr
						td
							p= player.name
						td
							p= statistics.darts_thrown
						td
							p= statistics.first_nine_ppd.toFixed(2)
						td
							p= statistics.ppd.toFixed(2)
						td
							p= statistics['60s_plus'] === 0 ? "" : "60+: " + statistics['60s_plus']
							p= statistics['100s_plus'] === 0 ? "" : "100+: " + statistics['100s_plus']
							p= statistics['140s_plus'] === 0 ? "" : "140+: " + statistics['140s_plus']
							p= statistics['180s'] === 0 ? "" : "180:  " + statistics['180s']

						if match.winner_id !== undefined && player.id === match.winner_id
							td
								span(class='glyphicon glyphicon-ok' aria-hidden='true')
						else
							td
	div(style='margin-bottom: 20px;')
		if match.winner_id === null
			button(type='button' class='btn btn-primary' id='continue-match' data-match=match.id) Continue match

	h3 Match Results
	p.
		Starting score was #{match.starting_score}, and a total of #{scores.length * 3} darts were thrown by #{Object.keys(players).length} players

	button(class='btn btn-primary btn-block' data-toggle="collapse" data-target="#visits_div") Show Visits
	div(id="visits_div" class="collapse")
		table(class='table table-striped table-bordered' id='match_visits_table')
			thead
				tr
					th Player
					th(colspan='3') First Dart
					th(colspan='3') Second Dart
					th(colspan='3') Third Dart
					th Total
					th PPD
					th(class="txt-center") Options
			tbody
				each throws in scores
					tr(id="visit-" + throws.id)
						td= players[throws.player_id].name
						td(id='first-dart-visit-' + throws.id data-score=throws.first_dart)= throws.first_dart
						td(id='first-dart-multiplier-visit-' + throws.id data-multiplier=throws.first_dart_multiplier)
							select(class='form-control' name='first-dart-multiplier-vist' + throws.id disabled)
								option(selected=throws.first_dart_multiplier === 1) Single
								option(selected=throws.first_dart_multiplier === 2) Double
								option(selected=throws.first_dart_multiplier === 3) Treble
						td
							label(class='label label-success' class='first-dart-visit-total-' + throws.id)= throws.first_dart * throws.first_dart_multiplier
						td(id='second-dart-visit-' + throws.id data-score=throws.second_dart)= throws.second_dart
						td(id='second-dart-multiplier-visit-' + throws.id data-multiplier=throws.second_dart_multiplier)
							select(class='form-control' name='second-dart-multiplier-vist' + throws.id disabled)
								option(selected=throws.second_dart_multiplier === 1) Single
								option(selected=throws.second_dart_multiplier === 2) Double
								option(selected=throws.second_dart_multiplier === 3) Treble
						td
							label(class='label label-success' class='second-dart-visit-total-' + throws.id)= throws.second_dart * throws.second_dart_multiplier
						td(id='third-dart-visit-' + throws.id data-score=throws.third_dart)= throws.third_dart
						td(id='third-dart-multiplier-visit-' + throws.id data-multiplier=throws.third_dart_multiplier)
							select(class='form-control' name='second-dart-multiplier-vist' + throws.id disabled)
								option(selected=throws.third_dart_multiplier === 1) Single
								option(selected=throws.third_dart_multiplier === 2) Double
								option(selected=throws.third_dart_multiplier === 3) Treble
						td
							label(class='label label-success' class='third-dart-visit-total-' + throws.id)= throws.third_dart * throws.third_dart_multiplier
						td(class='total-visit-score-' + throws.id)= (throws.first_dart * throws.first_dart_multiplier) + (throws.second_dart * throws.second_dart_multiplier) + (throws.third_dart * throws.third_dart_multiplier)
						td(class='visit-ppd-' + throws.id)= (((throws.first_dart * throws.first_dart_multiplier) + (throws.second_dart * throws.second_dart_multiplier) + (throws.third_dart * throws.third_dart_multiplier)) / 3).toFixed(2)
						td(class="txt-center")
							button(type="button" class="btn btn-default edit-visit" data-visit=throws.id data-issave='0')
								span(class="glyphicon glyphicon-edit" aria-hidden="true")

	h3 Match Heatmap
	div(style='text-align: center;')
		canvas(id='dartboard-heatmap')
